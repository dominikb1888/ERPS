mydata <- read.csv("transistors-per-microprocessor.csv", header = TRUE)
df <- data.frame(mydata)
p <- ggplot(df, aes(Year, Transistors.per.microprocessor))
p + geom_smooth(method = "loess") +
ggtitle(" Moore's Law - Computer Price/Performance vs. Transistors per Chip") +
xlab("Year") +
ylab("Transistors per Processor") +
theme_classic()
remotes::install_github("gadenbuie/countdown")
shiny::runGadget(sparklyr::connection_spark_shinyapp(), viewer = .rs.embeddedViewer)
library(sparklyr)
library(dplyr)
spark_install(version = "2.4.3", hadoop_version = "2.7")
sc <- spark_connect(master = "local")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
setwd("~/Documents/Teaching/21S/ERPS")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
setwd("~/Documents/Teaching/21S/ERPS")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(lubridate)
data <- read.csv("1_transistors-per-microprocessor.csv", header = TRUE)
library(ggplot2)
library(dplyr)
library(plotly)
library(hrbrthemes)
library(lubridate)
data <- read.csv("1_transistors-per-microprocessor.csv", header = TRUE)
data$Year <- ymd(sprintf("%d-01-01",data$Year))
# head(data)
# Usual area chart
p <- data %>%
ggplot( aes(x=Year, y=Transistors.per.microprocessor)) +
geom_area(fill="#69b3a2", alpha=0.5) +
geom_line(color="#69b3a2")
# Turn it interactive with ggplotly
p <- ggplotly(p, width =  1000)
p
p <- ggplotly(p, width =  1000)
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
source("../../Templates/render_toc.R")
# `this_post` is set in the setup chunk,
# points to the Rmd file for this post
render_toc("1_Introduction.Rmd")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr("O_Index.Rmd")
xaringan::inf_mr('Users/dboehler/Documents/Teaching/21S/ERPS/O_Index.Rmd")
xaringan::inf_mr('Users/dboehler/Documents/Teaching/21S/ERPS/O_Index.Rmd')
xaringan::inf_mr('Users/dboehler/Documents/Teaching/21S/ERPS/O_Index.Rmd')
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
# install.packages("devtools")
devtools::install_github("gadenbuie/countdown")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
devtools::install_github("dokato/todor")
xaringan::inf_mr()
xaringan::inf_mr()
names(xaringan:::list_css())
names(xaringan:::list_css())
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
devtools::install_github("ropenscilabs/icon")
remotes::install_github("mitchelloharawild/icon")
remotes::install_github("mitchelloharawild/icon")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
remotes::install_github("daattali/timevis")
install.packages("timevis")
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
xaringan::inf_mr()
xaringan::inf_mr()
library(timevis)
timevis()
data <- data.frame(
id      = 1:5,
content = c("Main Frame"  , "PC"  ,"Cloud Computing", "Smartphones", "Quantum Computer"),
start   = c("1945-01-01", "1975-01-01", "2016-01-20", "2008-01-01", "2017-01-01"),
end     = c("1995-01-01", "2021-01-01", "2021-01-01", "2021-01-01", "2021-01-01")
)
timevis(data)
```
```
library(timevis)
timevis()
data <- data.frame(
id      = 1:5,
content = c("Main Frame"  , "PC"  ,"Cloud Computing", "Smartphones", "Quantum Computer"),
start   = c("1945-01-01", "1975-01-01", "1995-01-20", "2008-01-01", "2017-01-01"),
end     = c("1995-01-01", "2021-01-01", "2021-01-01", "2021-01-01", "2021-01-01")
)
timevis(data)
```
xaringan::inf_mr()
install.packages("vistime")
install.packages("highcharter")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
icon::download_fontawesome()
migrate_icon()
icon::migrate_icon(Introduction.Rmd)
icon::migrate_icon(Introduction.Rmd)
migrate_icon()
xaringan::inf_mr()
xaringan::inf_mr()
install.packages('pander')
install.packages("readxl")
#options(htmltools.dir.version = FALSE)
#knitr::opts_chunk$set(echo = FALSE)
#options(knitr.duplicate.label = 'allow')
head(data)
head(courses)
head(courses)
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
head(courses)
library('pander')
library('readxl')
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
head(courses)
library('pander')
library('readxl')
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
courses
for (session in 1:nrow(courses)) {
session <- courses[session]
date <- courses[session, "date"]
title <- courses[session, "title"]
excercise <- courses[session, "excercise"]
session_list[[session]] <- paste(title, ".excercise[",excercise,"].date[",date,"]")
}
library('pander')
library('readxl')
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
courses
for (session in 1:nrow(courses)) {
session <- courses[session]
date <- courses[session, "date"]
title <- courses[session, "title"]
excercise <- courses[session, "excercise"]
session_list[[session]] <- paste(title, ".excercise[",excercise,"].date[",date,"]")
}
library('pander')
library('readxl')
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
courses
for (session in 1:18) {
date <- courses[session, "date"]
title <- courses[session, "title"]
excercise <- courses[session, "excercise"]
if (title) {
session_list[[session]] <- paste(title, ".excercise[",excercise,"].date[",date,"]")
} else {
session_list[[session]] <- paste(".no-class[-- NO CLASS --].date[",date,"]")
}
}
library('pander')
library('readxl')
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
head(courses)
for (session in 1:nrow(courses)) {
date <- courses[session, "date"]
title <- courses[session, "title"]
excercise <- courses[session, "excercise"]
if (title != "") {
session_list[[session]] <- paste(title," .excercise[",excercise,"].date[",date,"]")
} else {
session_list[[session]] <- paste(".no-class[-- NO CLASS --].date[",date,"]")
}
}
library('pander')
library('readxl')
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
head(courses)
for (session in 1:nrow(courses)) {
date <- courses[session, "date"]
title <- courses[session, "title"]
excercise <- courses[session, "excercise"]
if (is.na(title)) {
session_list[[session]] <- paste(".no-class[-- NO CLASS --].date[",date,"]")
} else {
session_list[[session]] <- paste(title," .excercise[",excercise,"].date[",date,"]")
}
}
pandoc.list.return(session_list, style = "ordered")
library('pander')
library('readxl')
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
head(courses)
install.packages("datetimeutils").
install.packages("datetimeutils")
xaringan::inf_mr()
xaringan::inf_mr()
unlink('Introduction_cache', recursive = TRUE)
xaringan::inf_mr()
xaringan::inf_mr()
unlink('Introduction_cache', recursive = TRUE)
unlink('Introduction_cache', recursive = TRUE)
xaringan::inf_mr()
xaringan::inf_mr()
unlink('Introduction_cache', recursive = TRUE)
pandoc.list(session_list, style = "ordered")
session_list[[session_no]] <- paste(title," .excercise[",excercise,"].date[",date,"]")
session_list[[session_no]] <- paste(title," .excercise[",excercise,"].date[",date,"]")
if (!is.na(courses[session, "session_no"])) {
session_no <- as.integer(courses[session, "session_no"])
date <- courses[session, "date"]
title <- courses[session, "title"]
excercise <- courses[session, "excercise"]
session_list[[session_no]] <- paste(title," .excercise[",excercise,"].date[",date,"]")
}
for (session in 1:nrow(courses)) {
if (!is.na(courses[session, "session_no"])) {
session_no <- as.integer(courses[session, "session_no"])
date <- courses[session, "date"]
title <- courses[session, "title"]
excercise <- courses[session, "excercise"]
session_list[[session_no]] <- paste(title," .excercise[",excercise,"].date[",date,"]")
}
}
pandoc.list(session_list, style = "ordered")
source('~/Documents/Teaching/21S/ERPS/test_session_list.R')
pandoc.list(session_list, style = "ordered")
pandoc.list(session_list, style = "ordered")
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
courses$date <- format(as.Date(as.character(courses$date)), "%d.%m.%Y")
for (session in 1:nrow(courses)) {
if (!is.na(courses[session, "session_no"])) {
session_no <- as.integer(courses[session, "session_no"])
date <- courses[session, "date"]
title <- courses[session, "title"]
excercise <- courses[session, "excercise"]
session_list[[session_no]] <- paste(title," .excercise[",excercise,"].date[",date,"]")
}
}
pandoc.list(session_list, style = "ordered")
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
courses$date <- format(as.Date(as.character(courses$date)), "%d.%m.%Y")
session_list <- list()
for (session in 1:nrow(courses)) {
if (!is.na(courses[session, "session_no"])) {
session_no <- as.integer(courses[session, "session_no"])
date <- courses[session, "date"]
title <- courses[session, "title"]
excercise <- courses[session, "excercise"]
session_list[[session_no]] <- paste(title," .excercise[",excercise,"].date[",date,"]")
}
}
pandoc.list(session_list, style = "ordered")
courses <- read_excel("../21S Überblick Lehre.xlsx", sheet = "ERPS")
courses$date <- format(as.Date(as.character(courses$date)), "%d.%m.%Y")
session_list <- list()
for (session in 1:nrow(courses)) {
if (!is.na(courses[session, "session_no"])) {
session_no <- as.integer(courses[session, "session_no"])
date <- courses[session, "date"]
title <- courses[session, "title"]
excercise <- courses[session, "excercise"]
session_list[[session_no]] <- paste(title," .excercise[",excercise,"].date[",date,"]")
}
}
pandoc.list(session_list, style = "ordered")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
rcrossref:::crAddins()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
citr:::insert_citation()
xaringan::inf_mr()
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages(c(
"directlabels", "dplyr", "gameofthrones", "ggforce", "gghighlight",
"ggnewscale", "ggplot2", "ggraph", "ggrepel", "ggtext", "ggthemes",
"hexbin", "mapproj", "maps", "munsell", "ozmaps", "paletteer",
"patchwork", "rmapshaper", "scico", "seriation", "sf", "stars",
"tidygraph", "tidyr", "wesanderson"
))
install.packages(c("directlabels", "dplyr", "gameofthrones", "ggforce", "gghighlight", "ggnewscale", "ggplot2", "ggraph", "ggrepel", "ggtext", "ggthemes", "hexbin", "mapproj", "maps", "munsell", "ozmaps", "paletteer", "patchwork", "rmapshaper", "scico", "seriation", "sf", "stars", "tidygraph", "tidyr", "wesanderson"))
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
citr:::insert_citation()
citr:::insert_citation()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
session_no <- 1
paste("This week: [Chapter", session_list[session_no, "chapter"],
", [Pages:", session_list[session_no, "page"],"-"session_list[session_no, "page_to"],
session_no <- 1
paste("This week: [Chapter",
session_list[session_no, "chapter"],
", [Pages:",
session_list[session_no, "page"],
"-",
session_list[session_no, "page_to"],
"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",
session_list[session_no, "page"],")")
paste("This week: [Chapter",
session_list[session_no, "chapter"],
", [Pages:",
session_list[session_no, "page"],
"-",
session_list[session_no, "page_to"],
"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",
session_list[session_no, "page"],")")
session_no <- 1
session_list <- list_sessions()
paste("This week: [Chapter",
session_list[session_no, "chapter"],
", [Pages:",
session_list[session_no, "page"],
"-",
session_list[session_no, "page_to"],
"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",
session_list[session_no, "page"],")")
session_no <- 1
session_list <- list_sessions()
head(session_list)
paste("This week: [Chapter",
session_list[session_no, "chapter"],
", [Pages:",
session_list[session_no, "page"],
"-",
session_list[session_no, "page_to"],
"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",
session_list[session_no, "page"],")")
session_no <- 1
course_list <- get_courses()
head(course_list)
paste("This week: [Chapter",
session_list[session_no, "chapter"],
", [Pages:",
session_list[session_no, "page"],
"-",
session_list[session_no, "page_to"],
"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",
session_list[session_no, "page"],")")
session_no <- 1
course_list <- get_courses()
head(course_list)
paste("This week: [Chapter",
course_list[session_no, "chapter"],
", [Pages:",
course_list[session_no, "page"],
"-",
course_list[session_no, "page_to"],
"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",
course_list[session_no, "page"],")")
session_no <- 1
course_list <- get_courses()
head(course_list)
paste("This week: [Chapter",
course_list[session_no, "chapters"],
", [Pages:",
course_list[session_no, "page"],
"-",
course_list[session_no, "page_to"],
"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",
course_list[session_no, "page"],")")
session_no <- 1
course_list <- get_courses()
head(course_list)
paste("This week: [Chapter",
course_list[session_no, "chapters"],
", [Pages:",
course_list[session_no, "page"],
"-",
course_list[session_no, "page_to"],
"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",
course_list[session_no, "page"],")")
xaringan::inf_mr()
session_no <- 1
course_list <- get_courses()
paste("This week: [Chapter",
course_list[session_no, "chapters"],
", [Pages:",
course_list[session_no, "page"],
"-",
course_list[session_no, "page_to"],
"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",
course_list[session_no, "page"],")")
session_no <- 1
course_list <- get_courses()
paste("This week: [Chapter",
course_list[session_no, "chapters"],
", [Pages:",
course_list[session_no, "page"],
"-",
course_list[session_no+1, "page"],
"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",
course_list[session_no, "page"],")")
session_no <- 1
course_list <- get_courses()
paste("This week: [Chapter",course_list[session_no, "chapters"],", [Pages:",course_list[session_no, "page"],"-",course_list[session_no+1, "page"],"](https://ebookcentral.proquest.com/lib/th-deggendorf/reader.action?docID=6191969&ppg=",course_list[session_no, "page"],")")
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
remotes::install_github("jcrodriguez1989/interactingan", dependencies = TRUE)
install.packages(rsconnect)
rsconnect::setAccountInfo
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='dominikb1888',
token='6593D0DCF1DE4E9D9954E5B77FCDB55F',
secret='8eaoZB2jEMKi7V/JXDekM7WUJvWTGlgdvtGKSsm/')
library("interactingan")
# Will configure an empty app to the shinyapps server;
# and show a qr code that points to the interactingan app url
set_app()
xaringan::moon_reader()
set_app()
# Deploys the final interactingan app to the shinyapps server
deploy_interactions()
# Deploys the final interactingan app to the shinyapps server
deploy_interactions()
library("interactingan")
# Will configure an empty app to the shinyapps server;
# and show a qr code that points to the interactingan app url
set_app()
# Deploys the final interactingan app to the shinyapps server
deploy_interactions()
deploy_interactions()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
